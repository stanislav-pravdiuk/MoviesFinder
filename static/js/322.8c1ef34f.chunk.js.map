{"version":3,"file":"static/js/322.8c1ef34f.chunk.js","mappings":"2NACA,EAAuB,mB,SC2BvB,MAvBA,WAEI,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAW,gBAAYF,EAAZ,qBAQjB,OANAG,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUF,GACLG,MAAK,SAAAC,GAAQ,OAAIP,EAAQO,EAASR,KAArB,IACbS,OAAM,SAAAC,GAAWC,QAAQC,IAAIF,EAAQ,GAC7C,GAAE,CAACN,KAEI,gBAAKS,UAAWC,EAAhB,UACI,wBACKd,EAAKe,KAAI,SAAAC,GACN,OAAO,0BACFA,EAAOC,cADL,KACsBD,EAAOE,UAD7B,MAASF,EAAOG,GAG1B,OAGpB,C,6EC1BM,IAAMC,EAAQ,gCACRC,EAAO,kC,8DCELf,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBgB,GAAzB,iFACiBC,MAAM,GAAD,OAAIH,EAAAA,GAAJ,OAAeE,GAAf,OAAwBD,EAAAA,IAC7Bd,MAAK,SAAAC,GAAa,OAAOA,EAASgB,MAAO,IAF1D,0GAKA,I,SALyB,GAAVlB,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,sBCHf,SAASmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxB,GAEP,YADAkB,EAAOlB,EAET,CAEIuB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO3B,KAAKsB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/cast/cast.module.css?44e2","components/cast/Cast.jsx","services/api.js","services/fetchAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"cast_cast__nH-xI\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport getMovies from \"services/fetchAPI\";\nimport css from './cast.module.css'\n\nfunction Cast() {\n\n    const [cast, setCast] = useState([])\n    const { movieId } = useParams();\n    const fetchParams = `movie/${movieId}/credits?api_key=`;\n\n    useEffect(() => {\n        getMovies(fetchParams)\n            .then(response => setCast(response.cast))\n            .catch(error => { console.log(error) });\n    }, [fetchParams]);\n\n    return (<div className={css.cast}>\n                <ul>\n                    {cast.map(artist => {\n                        return <li key={artist.id}>\n                            {artist.original_name} ({artist.character})\n                        </li>\n                    })}\n                </ul>\n            </div>)\n}\n\nexport default Cast;","export const BASE_URL = `https://api.themoviedb.org/3/`;\nexport const API_KEY = `acac49daeae449d51e6ac182f82d5604`;","import { BASE_URL } from \"./api\";\nimport { API_KEY } from \"./api\";\n\nasync function getMovies(params) {\n    return await fetch(`${BASE_URL}${params}${API_KEY}`)\n                .then(response => {return response.json()})\n};\n\nexport default getMovies;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","movieId","useParams","fetchParams","useEffect","getMovies","then","response","catch","error","console","log","className","css","map","artist","original_name","character","id","BASE_URL","API_KEY","params","fetch","json","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}